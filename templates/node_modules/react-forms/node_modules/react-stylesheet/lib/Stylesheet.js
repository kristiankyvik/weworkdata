/**
 * @copyright 2015, Prometheus Research, LLC
 */

'use strict';

Object.defineProperty(exports, '__esModule', {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

exports.createStylesheet = createStylesheet;
exports.isValidStylesheet = isValidStylesheet;
exports.overrideStylesheet = overrideStylesheet;

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

var _invariant = require('invariant');

var _invariant2 = _interopRequireDefault(_invariant);

var _isValidReactComponent = require('./isValidReactComponent');

var _isValidReactComponent2 = _interopRequireDefault(_isValidReactComponent);

var _styleComponent = require('./styleComponent');

var _styleComponent2 = _interopRequireDefault(_styleComponent);

/**
 * Create stylesheet from stylesheet spec.
 */

function createStylesheet(spec) {
  var stylesheet = {};
  for (var key in spec) {
    if (!spec.hasOwnProperty(key)) {
      continue;
    }
    var item = spec[key];
    if ((0, _isValidReactComponent2['default'])(item)) {
      stylesheet[key] = item;
    } else {
      var _item$Component = item.Component;
      var Component = _item$Component === undefined ? 'div' : _item$Component;

      var componentStylesheet = _objectWithoutProperties(item, ['Component']);

      Component = (0, _styleComponent2['default'])(Component, componentStylesheet);
      stylesheet[key] = Component;
    }
  }
  return stylesheet;
}

/**
 * Check if object is a valid stylesheet.
 *
 * Object is a stylesheet if every value is a valid React component.
 */

function isValidStylesheet(obj) {
  for (var key in obj) {
    if (!obj.hasOwnProperty(key)) {
      continue;
    }
    if (!(0, _isValidReactComponent2['default'])(obj[key])) {
      return false;
    }
  }
  return true;
}

/**
 * Produce a new stylesheet by overriding keys from the original stylesheet with
 * values from spec.
 *
 * Note that as stylesheet is also a valid spec then this function can be used
 * to override one stylesheet with another.
 */

function overrideStylesheet(stylesheet, spec) {
  (0, _invariant2['default'])(isValidStylesheet(stylesheet), 'overrideStylesheet(...): first argument should be a valid stylesheet');
  stylesheet = _extends({}, stylesheet);
  for (var key in spec) {
    if (!spec.hasOwnProperty(key)) {
      continue;
    }
    (0, _invariant2['default'])(stylesheet[key] !== undefined, 'overrideStylesheet(...): invalid override, stylesheet does not have key "%s"', key);
    var item = spec[key];
    if ((0, _isValidReactComponent2['default'])(item)) {
      stylesheet[key] = item;
    } else {
      var _spec$key = spec[key];
      var _spec$key$Component = _spec$key.Component;
      var Component = _spec$key$Component === undefined ? stylesheet[key] : _spec$key$Component;

      var componentStylesheet = _objectWithoutProperties(_spec$key, ['Component']);

      stylesheet[key] = (0, _styleComponent2['default'])(Component, componentStylesheet);
    }
  }
  return stylesheet;
}
