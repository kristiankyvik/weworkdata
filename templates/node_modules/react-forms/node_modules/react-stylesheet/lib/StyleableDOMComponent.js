/**
 * @copyright 2015 Prometheus Research, LLC
 */

'use strict';

Object.defineProperty(exports, '__esModule', {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _getComponentDisplayName = require('./getComponentDisplayName');

var _getComponentDisplayName2 = _interopRequireDefault(_getComponentDisplayName);

var _DOMStylesheet = require('./DOMStylesheet');

var DOMStylesheet = _interopRequireWildcard(_DOMStylesheet);

var StyleableDOMComponent = (function (_React$Component) {
  _inherits(StyleableDOMComponent, _React$Component);

  _createClass(StyleableDOMComponent, null, [{
    key: 'style',
    value: function style(spec) {
      var _this = this;

      return (function (_StyleableDOMComponent) {
        _inherits(_class, _StyleableDOMComponent);

        function _class() {
          _classCallCheck(this, _class);

          _get(Object.getPrototypeOf(_class.prototype), 'constructor', this).apply(this, arguments);
        }

        _createClass(_class, null, [{
          key: 'displayName',
          value: (0, _getComponentDisplayName2['default'])(_this),
          enumerable: true
        }, {
          key: 'Component',
          value: _this.Component,
          enumerable: true
        }, {
          key: 'stylesheet',
          value: DOMStylesheet.overrideStylesheet(_this.stylesheet, spec),
          enumerable: true
        }]);

        return _class;
      })(StyleableDOMComponent);
    }
  }, {
    key: 'Component',
    value: null,
    enumerable: true
  }, {
    key: 'stylesheet',
    value: null,
    enumerable: true
  }, {
    key: 'propTypes',
    value: {
      variant: _react.PropTypes.object,
      state: _react.PropTypes.object,
      Component: _react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.func]),
      className: _react.PropTypes.string
    },
    enumerable: true
  }]);

  function StyleableDOMComponent(props) {
    _classCallCheck(this, StyleableDOMComponent);

    _get(Object.getPrototypeOf(StyleableDOMComponent.prototype), 'constructor', this).call(this, props);
    this._stateDeprecationWarned = false;
  }

  _createClass(StyleableDOMComponent, [{
    key: 'render',
    value: function render() {
      var _props = this.props;
      var variant = _props.variant;
      var state = _props.state;
      var _props$Component = _props.Component;
      var Component = _props$Component === undefined ? this.constructor.Component : _props$Component;
      var extraClassName = _props.className;

      var props = _objectWithoutProperties(_props, ['variant', 'state', 'Component', 'className']);

      if (state && !this._stateDeprecationWarned) {
        this._stateDeprecationWarned = true;
        console.error( // eslint-disable-line
        'Warning: React Stylesheet: state is deprecated, use variant instead');
      }
      variant = variant || state;
      var stylesheet = this.constructor.stylesheet;

      var className = stylesheet.asClassName(variant);
      return _react2['default'].createElement(Component, _extends({}, props, {
        className: (0, _classnames2['default'])(className, extraClassName)
      }));
    }
  }, {
    key: 'componentDidMount',
    value: function componentDidMount() {
      this.constructor.stylesheet.use();
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      this.constructor.stylesheet.dispose();
    }
  }]);

  return StyleableDOMComponent;
})(_react2['default'].Component);

exports['default'] = StyleableDOMComponent;
module.exports = exports['default'];
